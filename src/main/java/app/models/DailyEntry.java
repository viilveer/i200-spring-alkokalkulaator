package app.models;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;

/**
 * Created by Mihkel on 14.10.2015.
 */
@Entity
@Table(name = "daily_entry")
public class DailyEntry implements Comparable<DailyEntry> {

    // Entity's fields (private)

    // An autogenerated id (unique for each user in the db)
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private int id;

    @NotNull
    private Integer userId;

    @NotNull
    private Double relativePercentage;

    @NotNull
    private Integer amount;

    @NotNull
    private Double absoluteAmount;

    @NotNull

    private String date;


    // Public methods

    public DailyEntry() { }

    public DailyEntry(int id) {
        this.id = id;
    }

    public DailyEntry(Integer userId, Double relativePercentage, Integer amount, Double absoluteAmount, String date) {
        this.userId = userId;
        this.relativePercentage = relativePercentage;
        this.amount = amount;
        this.absoluteAmount = absoluteAmount;
        this.date = date;
    }

    public Integer getUserId() {
        return userId;
    }

    public Double getRelativePercentage() {
        return relativePercentage;
    }

    public Integer getAmount() {
        return amount;
    }

    public Double getAbsoluteAmount() {
        return absoluteAmount;
    }

    public String getDate() {
        return date;
    }

    public String getFormattedDate() {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDateTime createdDate = LocalDateTime.parse(this.date, formatter);
        return createdDate.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
    }

    public int getId() {
        return id;
    }

    @Override
    public int compareTo(DailyEntry o) {
        try {
            DateFormat dateFormat = new SimpleDateFormat("EEE, dd MMM yyyy hh:mm:ss z");
            Date date = dateFormat.parse(this.getDate());
            int unixTime = (int)date.getTime()/1000;
            date = dateFormat.parse(o.getDate());
            int unixTime2 = (int)date.getTime()/1000;
            return unixTime-unixTime2;
        } catch (ParseException e) {
            e.getStackTrace();
        }
        return 0;
    }
}
